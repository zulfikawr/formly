generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  forms         Form[]
}

model Form {
  id            String    @id @default(cuid())
  title         String
  description   String?
  published     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions     Question[]
  responses     Response[]
}

model Question {
  id            String    @id @default(cuid())
  text          String
  type          String    // text, multipleChoice, checkbox, dropdown
  required      Boolean   @default(false)
  order         Int
  options       Json?     // For multiple choice, checkbox, dropdown
  formId        String
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  answers       Answer[]
}

model Response {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  formId        String
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  answers       Answer[]
}

model Answer {
  id            String    @id @default(cuid())
  value         String
  questionId    String
  question      Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  responseId    String
  response      Response  @relation(fields: [responseId], references: [id], onDelete: Cascade)
}